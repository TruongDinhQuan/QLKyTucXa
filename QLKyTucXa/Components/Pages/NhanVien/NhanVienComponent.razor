@page "/nhanvien"
@inject INhanVienServices nhanvien
@inject ITaiKhoanServices taikhoan
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@attribute [StreamRendering]
<PageTitle>NhanVien</PageTitle>

<h1>DANH SÁCH NHÂN VIÊN</h1>

<br />
<button class="btn btn-primary" @onclick="themmoi">thêm mới</button>
<br />
@if (Nhanvien is null)
{
    <div class="sv-item">
        Loading danh sách. chờ xí...
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Tên Nhân Viên</th>
                <th>SDT</th>
                <th>Địa Chỉ</th>
                <th>Chức Vụ</th>
                <th>Tài Khoản</th>
                <th>Thao Tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in Nhanvien)
            {
                <tr>
                    <td>@forecast.HoTen</td>
                    <td>@forecast.Sdt</td>
                    <td>@forecast.DiaChi</td>
                    <td>@forecast.ChucVu</td>
                    <td>@(string.IsNullOrEmpty(forecast.Iduser) ? "Không có" : TaiKhoanDict[forecast.Iduser])</td>
                    <td>
                        <button class="btn btn-secondary" @onclick="@(() => Update(forecast.IdnhanVien))">Sửa</button>
                        <button class="btn btn-danger" @onclick="@(() => Delete(forecast.IdnhanVien))">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<Delete @rendermode="InteractiveServer" xacnhan="xacnhanxoa" OnCancel="CancelDelete" OnOK="okDelete"></Delete>

@code {
    private List<Nhanvien> Nhanvien = new List<Nhanvien>();
    private Dictionary<string, string> TaiKhoanDict = new Dictionary<string, string>();
    private string? idToDelete;
    private bool xacnhanxoa = false;

    protected override async Task OnInitializedAsync()
    {
        Nhanvien = await nhanvien.GetPhongAsync();

        foreach (var nv in Nhanvien)
        {
            if (!string.IsNullOrEmpty(nv.Iduser))
            {
                var account = await taikhoan.GettaikhoanByIdAsync(nv.Iduser);
                TaiKhoanDict[nv.Iduser] = account?.TenDangNhap ?? "Không có tài khoản";
            }
        }
    }
        
    private void themmoi()
    {
        navigationManager.NavigateTo("/Addnhanvien");
    }

    private void Update(string id)
    {
        navigationManager.NavigateTo($"/Addnhanvien/{id}");
    }

    private void Delete(string id)
    {
        idToDelete = id;
        xacnhanxoa = true;
    }

    private void CancelDelete()
    {
        xacnhanxoa = false;
    }

    private async Task okDelete()
    {
        if (!string.IsNullOrEmpty(idToDelete))
        {
            await nhanvien.DeletePhongAsync(idToDelete);
            xacnhanxoa = false;
            Nhanvien = await nhanvien.GetPhongAsync();
        }
    }
}


